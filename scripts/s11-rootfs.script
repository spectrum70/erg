#!/bin/sh

# TODO: actually adding always libc, but may be avoided if all the system
# is static

ramfs_cmp=gzip

if [ "${arch}" == "arm" ]; then
	msg "Adding libc dynamic libs ..."
	erg_cross_path=$(dirname "${erg_cross}")
	sudo cp -a ${erg_cross_path}/../arm-none-linux-gnueabihf//libc/lib/* targetfs/usr/lib
	sudo cp -a ${erg_cross_path}/../arm-none-linux-gnueabihf/lib/libstdc++.so.6 targetfs/usr/lib
	sudo cp -a ${erg_cross_path}/../arm-none-linux-gnueabihf/lib/libgcc_s.so.1 targetfs/usr/lib
	sudo rm -rf targetfs/usr/lib/*2.28*
	sudo mv targetfs/usr/lib/ld-linux-armhf.* targetfs/lib
	msg "Adding libc dynamic libs OK"
fi


if [ "x${initramfs}" == "x1" ]; then

	if [ ${ramfs_cmp} == gzip ]; then
                cmp="gzip"
                cmp_ext=gz
                cmp_img=gzip
        fi
	if [ ${ramfs_cmp} == xz ]; then
		cmp="xz --threads=1 --check=crc32 --lzma2=dict=512KiB"
		cmp_ext=xz
		cmp_img=xz
	fi
	if [ ${ramfs_cmp} == zstd ]; then
		cmp="zstd -T0 -22 --ultra"
                cmp_ext=zstd
		cmp_img=zstd
        fi
	if [ ${ramfs_cmp} == bzip2 ]; then
		cmp="bzip2"
                cmp_ext=bz2
		cmp_img=bzip2
        fi

	msg "creating uRamdisk (on $card_dev, from ${ramfs})"

	sudo rm -rf initramfs.* uRamfs ramfs

	msg "creating initramfs ..."
	fakeroot chown -R root:root targetfs
	cd targetfs; find . | fakeroot cpio -H newc -o > ../initramfs.cpio
	cd ..
	cat initramfs.cpio | fakeroot ${cmp} > initramfs.cpio.${cmp_ext}
	# rm -rf initramfs.cpio
	sync
	msg "creating initramfs done"
	if [ ${ramfs_cmp} != xz ]; then
		msg "creating initramfs uRamfs ..."
		mkimage -A arm -O linux -T ramdisk -C ${cmp_img} -n 'initramfs image' -d initramfs.cpio.${cmp_ext} uRamfs
		msg "creating initramfs uRamfs done"
	else
		msg "xz compression, not supported by mkimage, skipping uRamfs"
	fi
fi
